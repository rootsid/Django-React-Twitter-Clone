{"version":3,"sources":["logo.svg","tweets/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["TweetComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newValue","current","value","tempNewTweets","unshift","content","likes","id","ref","required","name","type","TweetsList","tweets","setTweets","tweets2","setTweets2","console","log","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","tweetsEl"],"mappings":"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","file":"static/js/main.6025b0e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport {useState, useEffect} from 'react';\r\nimport { loadTweets } from '../lookup';\r\n\r\nexport function TweetComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newValue = textAreaRef.current.value\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift({\r\n            content: newValue,\r\n            likes: 0,\r\n            id: 12313\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return <div className={props.className}>\r\n        <div className='col-12 mb-3'>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required='true' className=\"form-control\" name='tweet'>\r\n\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n        </div>\r\n        <TweetsList newTweets={newTweets} />\r\n    </div>\r\n}\r\n  \r\nexport function TweetsList(props) {\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweets2, setTweets2] = useState([])\r\n    console.log(props.newTweets)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweets)\r\n        if (final.length !== tweets2.length) {\r\n            setTweets2(final)\r\n        }\r\n    }, [props.newTweets, tweets2, tweets])\r\n\r\n    useEffect(() => {\r\n        const myCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setTweets(response)\r\n        } else {\r\n            alert(\"There was an error.\")\r\n        }\r\n        }\r\n        loadTweets(myCallback)\r\n    }, [])\r\n\r\n    return tweets2.map((item, index) => {\r\n        return <Tweet tweet={item} key={`${index}`} />\r\n    })\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary'\r\n    const actionDisplay = action.display ? action.display : \"Action\"\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if (action.type === 'like') {\r\n            if (userLike === true) {\r\n                setLikes(likes - 1)\r\n                setUserLike(false)\r\n            }\r\n            else {\r\n                setLikes(tweet.likes + 1)\r\n                setUserLike(true)\r\n            }\r\n        } \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : \"my-5 py-5 border bg-white text-dark\"\r\n    return <div className={className}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type: \"like\", display: \"Likes\"}} />\r\n        {/* <ActionBtn tweet={tweet} action={{type: \"unlike\", display: \"Unlike\"}} /> */}\r\n        <ActionBtn tweet={tweet} action={{type: \"retweet\", display: \"Retweet\"}} />\r\n        </div>\r\n    </div>\r\n}\r\n","export function loadTweets(callback) {\r\n    const xhr = new XMLHttpRequest()\r\n    const method = 'GET'\r\n    const url = \"http://localhost:8000/api/tweets/\"\r\n    const responseType = \"json\"\r\n\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function() {\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function () {\r\n        callback({\"message\": \"The request raised an error\"}, 400)\r\n    }\r\n    xhr.send()\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TweetComponent } from './tweets';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <div>\r\n          <TweetComponent />\r\n        </div>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { TweetComponent } from './tweets';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\nconst appEl = document.getElementById('root')\r\nif (appEl) {\r\n  ReactDOM.render(<App />, appEl)\r\n}\r\n\r\nconst tweetsEl = document.getElementById('tweetme-2')\r\nif (tweetsEl) {\r\n  ReactDOM.render(<TweetComponent />, tweetsEl)\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}